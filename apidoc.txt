Документация к API приложения SanicBoard v1.0

# -----------------------------------------------------C R E A T E------------------------------------------------------
@app.route("/add_category", methods=['POST'])
async def add_category(request) -> json:
    """
    Позволяет создать категорию.
    :body title - заголовок (mandatory)
    :body summary - описание (mandatory)
    """

POST /add_post/<category_id:int>
    """
    Позволяет добавить пост по category_id.
    Принимает URL-параметры:
    :body title - заголовок (mandatory)
    :body body - тело сообщения (mandatory)
    """

POST add_comment/<post_id:int>
    """
    Позволяет добавить комментарий к посту по post_id,
    либо к другому комментарию (по parent_comment_id, указываемому в теле сообщения).
    Принимает URL-параметры:
    :body title - заголовок (mandatory)
    :body body - тело комментария (mandatory)
    :body parent_comment_id - добавляется, если комментируется другой комментарий, а не пост (optional)
    """

# -----------------------------------------------------U P D A T E------------------------------------------------------
POST /edit_category/<category_id:int>
    Находит категорию по category_id. Позволяет произвести редактирование категории.
    Принимает URL-параметры:
    """
    :body title - заголовок (optional)
    :body summary - описание категории (optional)
    """

POST /edit_post/<post_id:int>
    Находит пост по post_id. Позволяет произвести редактирование поста.
    Принимает URL-параметры:
    """
    :body title - заголовок (optional)
    :body body - тело сообщения (optional)
    """

POST /edit_comment/<comment_id:int>
    """
    Находит комментарий по comment_id. Позволяет произвести редактирование комментария.
    Принимает URL-параметры:
    :body title - заголовок (optional)
    :body body - тело комментария (optional)
    """

# -----------------------------------------------------G E T------------------------------------------------------------
GET /get_categories
    """
    Позволяет получить все категории из базы данных. Доступна пагинация.
    Example: /get_categories?limit=20&offset=0

    :arg limit - максимальное количество элементов в выдаче (mandatory)
    :arg offset - индекс элемента, с которого будет запрошен новый набор элементов
    """

GET /get_posts/<category_id:int>
    """
    Позволяет получить все посты из базы данных. Доступна пагинация.
    Example: /get_posts/10?limit=20&offset=0

    :arg limit - максимальное количество элементов в выдаче (mandatory)
    :arg offset - индекс элемента, с которого будет запрошен новый набор элементов
    """

GET /get_post/<post_id:int>
    """
    Позволяет получить пост с комментариями. Для комментариев доступна пагинация.
    Example: /get_post?limit=20&offset=0
    limit и offset применяются только для комментариев, оставленных к посту.

    :arg limit - максимальное количество элементов в выдаче (mandatory)
    :arg offset - индекс элемента, с которого будет запрошен новый набор элементов
    """

GET /get_comment/<comment_id:int>
    """
    Позволяет получить комментарий со вложенными комментариями.
    Для вложенных комментов доступна пагинация
    Example: /get_comment?limit=20&offset=0
    limit и offset применяются только для комментариев, оставленных к запрошенному комментарию.

    Принимает URL-параметры:
    :arg limit - максимальное количество элементов в выдаче (mandatory)
    :arg offset - индекс элемента, с которого будет запрошен новый набор элементов
    """

GET /search_category
    """
    Выполняет поиск по полному/частичному имени категории.
    Принимает URL-параметры:
    :arg limit - максимальное количество элементов в выдаче (mandatory)
    :arg offset - индекс элемента, с которого будет запрошен новый набор элементов
    :arg category_name - полное или частичное имя категории

    Example: /search_category?category_name='Main category&limit=20&offset=0'
    """

GET /search_post
    """
    Выполняет поиск по полному/частичному имени поста.
    Принимает URL-параметры:
    :arg limit - максимальное количество элементов в выдаче (mandatory)
    :arg offset - индекс элемента, с которого будет запрошен новый набор элементов
    :arg post_name - полное или частичное имя поста

    Example: /search_category?post_name='My first post&limit=20&offset=0'
    """

# -----------------------------------------------------D E L E T E------------------------------------------------------
DELETE /delete_category/<category_id:int>
    """Принимает в URL-параметр category_id - уникальный идентификатор категории.
       Категория удаляется вместе с постами и комментариями"""



DELETE /delete_post/<post_id:int>
    """Принимает в URL-параметр post_id - уникальный идентификатор поста.
       Пост удаляется вместе с комментариями"""



DELETE /delete_comment/<comment_id:int>
    """Принимает в URL-параметр comment_id - уникальный идентификатор комментария.
       Комментарий удаляется вместе с вложенными комментариями"""
